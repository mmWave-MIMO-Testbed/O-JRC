id: FMCW_MIMO_FMCW_Radar
label: FMCW_Radar
category: '[FMCW_MIMO]'

templates:
  imports: import FMCW_MIMO
  make: FMCW_MIMO.FMCW_Radar(${fft_len}, ${N_tx}, ${N_rx}, ${len_tag_key})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as \$keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
parameters:
- id: fft_len
  label: FFT Length
  dtype: int
  default: fft_len
- id: N_tx
  label: Number of TX Antennas
  dtype: int
- id: N_rx
  label: Number of RX Antennas
  dtype: int
- id: len_tag_key
  label: Length Tag Key
  dtype: string
  default: '"packet_len"'
#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- domain: stream
  label: tx
  dtype: complex
  vlen: ${ fft_len }
  multiplicity: ${ N_tx }
- domain: stream
  label: rx
  dtype: complex
  vlen: ${ fft_len }
  multiplicity: ${ N_rx }

outputs:
- domain: stream
  dtype: complex
  vlen: ${ fft_len}
#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
