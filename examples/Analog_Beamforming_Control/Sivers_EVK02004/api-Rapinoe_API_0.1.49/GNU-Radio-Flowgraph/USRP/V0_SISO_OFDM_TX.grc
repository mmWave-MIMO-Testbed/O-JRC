options:
  parameters:
    author: host-pc
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: V0_SISO_OFDM_TX
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: SISO_OFDM_TX
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: N_ltf
  id: variable
  parameters:
    comment: ''
    value: ofdm_config_siso.N_ltf
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [720, 20.0]
    rotation: 0
    state: enabled
- name: N_tx
  id: variable
  parameters:
    comment: ''
    value: ofdm_config_siso.N_tx
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [640, 20.0]
    rotation: 0
    state: enabled
- name: chan_est_file
  id: variable
  parameters:
    comment: ''
    value: parrent_path+"/data/chan_est.csv"
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [360, 188.0]
    rotation: 0
    state: true
- name: cp_len
  id: variable
  parameters:
    comment: ''
    value: int(fft_len/4)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [552, 20.0]
    rotation: 0
    state: enabled
- name: delay_samp
  id: variable_qtgui_range
  parameters:
    comment: 125 MHz -> 187
    gui_hint: 8,0,1,8
    label: TX/RX Sync
    min_len: '200'
    orient: Qt.Horizontal
    rangeType: float
    start: '0'
    step: '1'
    stop: '500'
    value: 187+5
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [736, 948.0]
    rotation: 0
    state: disabled
- name: fft_len
  id: variable
  parameters:
    comment: ''
    value: ofdm_config_siso.N_sc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [480, 20.0]
    rotation: 0
    state: enabled
- name: interp_factor
  id: variable
  parameters:
    comment: ''
    value: '8'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [808, 20.0]
    rotation: 0
    state: enabled
- name: mcs
  id: variable_qtgui_chooser
  parameters:
    comment: ''
    gui_hint: 3,0,1,8
    label: Modulation and Coding Scheme
    label0: ''
    label1: ''
    label2: ''
    label3: ''
    label4: ''
    labels: '["BPSK 1/2", "BPSK 3/4", "QPSK 1/2", "QPSK 3/4", "16QAM 1/2","16QAM 3/4"
      ]'
    num_opts: '0'
    option0: '0'
    option1: '1'
    option2: '2'
    option3: '3'
    option4: '4'
    options: '[0, 1, 2, 3, 4, 5] '
    orient: Qt.QHBoxLayout
    type: int
    value: '3'
    widget: radio_buttons
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [456, 380.0]
    rotation: 0
    state: enabled
- name: packet_data_file
  id: variable
  parameters:
    comment: ''
    value: parrent_path+"/data/packet_data.csv"
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [544, 252.0]
    rotation: 0
    state: enabled
- name: parrent_path
  id: variable
  parameters:
    comment: ''
    value: '"/home/haocheng/O-JRC/examples"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [176, 188.0]
    rotation: 0
    state: enabled
- name: radar_log_file
  id: variable
  parameters:
    comment: ''
    value: parrent_path+"/data/radar_log.csv"
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [368, 252.0]
    rotation: 0
    state: enabled
- name: rf_freq
  id: variable
  parameters:
    comment: ''
    value: 60e9
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [392, 20.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: int(35e6)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [288, 108.0]
    rotation: 0
    state: enabled
- name: tx_gain
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: 0,0,1,3
    label: TX Gain
    min_len: '200'
    orient: Qt.Horizontal
    rangeType: float
    start: '0'
    step: '1'
    stop: '80'
    value: '76'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [664, 108.0]
    rotation: 0
    state: enabled
- name: tx_multiplier
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: 0,6,1,2
    label: TX Scaling
    min_len: '200'
    orient: Qt.Horizontal
    rangeType: float
    start: '0.01'
    step: '0.01'
    stop: '4'
    value: '0.42'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [800, 108.0]
    rotation: 0
    state: enabled
- name: usrp_freq
  id: variable
  parameters:
    comment: ''
    value: 4.8e8
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [296, 20.0]
    rotation: 0
    state: enabled
- name: wavelength
  id: variable
  parameters:
    comment: ''
    value: 3e8/rf_freq
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [392, 108.0]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_vxx_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: tx_multiplier
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [344, 740.0]
    rotation: 0
    state: enabled
- name: blocks_null_sink_0
  id: blocks_null_sink
  parameters:
    affinity: ''
    alias: ''
    bus_structure_sink: '[[0,],]'
    comment: ''
    num_inputs: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1152, 904.0]
    rotation: 0
    state: disabled
- name: blocks_socket_pdu_0
  id: blocks_socket_pdu
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    host: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    mtu: '5000'
    port: '52001'
    tcp_no_delay: 'False'
    type: UDP_SERVER
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [136, 612.0]
    rotation: 0
    state: enabled
- name: digital_ofdm_cyclic_prefixer_0
  id: digital_ofdm_cyclic_prefixer
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    cp_len: cp_len
    input_size: fft_len
    maxoutbuf: '0'
    minoutbuf: ''
    rolloff: '0'
    tagname: '"packet_len"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1280, 532.0]
    rotation: 0
    state: enabled
- name: fft_vxx_0
  id: fft_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: tuple([1/52**.5] * 64)
    fft_size: fft_len
    forward: 'False'
    maxoutbuf: '0'
    minoutbuf: '65536'
    nthreads: '1'
    shift: 'True'
    type: complex
    window: tuple([1/64**.5] * 64)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1048, 516.0]
    rotation: 0
    state: enabled
- name: import_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import numpy as np
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 12.0]
    rotation: 0
    state: enabled
- name: import_0_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import cmath
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [136, 108.0]
    rotation: 0
    state: true
- name: import_0_0_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import string
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 60.0]
    rotation: 0
    state: enabled
- name: import_0_0_0_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import random
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [24, 108.0]
    rotation: 0
    state: enabled
- name: import_0_0_1
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import os
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [32, 164.0]
    rotation: 0
    state: true
- name: mimo_ofdm_jrc_mimo_precoder_0
  id: mimo_ofdm_jrc_mimo_precoder
  parameters:
    N_ss: '1'
    N_tx: N_tx
    affinity: '[7]'
    alias: ''
    chan_est_file: chan_est_file
    chan_est_smoothing: 'False'
    comment: ''
    data_carriers: ofdm_config_siso.data_subcarriers
    debug: 'False'
    fft_len: fft_len
    len_tag_key: '"packet_len"'
    mapped_ltf_symbols: ofdm_config_siso.ltf_mapped_sc__ss_sym
    maxoutbuf: '0'
    minoutbuf: '1000'
    phased_steering: 'False'
    pilot_carriers: ofdm_config_siso.pilot_subcarriers
    pilot_symbols: ofdm_config_siso.pilot_symbols
    radar_aided: 'False'
    radar_log_file: radar_log_file
    sync_words: ofdm_config_siso.l_stf_ltf_64
    use_radar_streams: 'False'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [776, 460.0]
    rotation: 0
    state: true
- name: mimo_ofdm_jrc_ndp_generator_0
  id: mimo_ofdm_jrc_ndp_generator
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [208, 448.0]
    rotation: 0
    state: disabled
- name: mimo_ofdm_jrc_packet_switch_0
  id: mimo_ofdm_jrc_packet_switch
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    packet_info_file: packet_data_file
    period_ms: '50'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 524.0]
    rotation: 0
    state: disabled
- name: mimo_ofdm_jrc_socket_pdu_jrc_0
  id: mimo_ofdm_jrc_socket_pdu_jrc
  parameters:
    MTU: '5000'
    affinity: ''
    alias: ''
    comment: ''
    host: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    port: '52001'
    type: UDP_SERVER
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [208, 332.0]
    rotation: 0
    state: disabled
- name: mimo_ofdm_jrc_stream_encoder_0
  id: mimo_ofdm_jrc_stream_encoder
  parameters:
    N_ss_radar: '0'
    affinity: ''
    alias: ''
    comment: ''
    data_len: ofdm_config_siso.N_data
    debug: 'False'
    maxoutbuf: '0'
    minoutbuf: ''
    mod_encode: mcs
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [432, 524.0]
    rotation: 0
    state: true
- name: mimo_ofdm_jrc_usrp_mimo_trx_0
  id: mimo_ofdm_jrc_usrp_mimo_trx
  parameters:
    N_mboard: '1'
    N_rx: '0'
    N_tx: '1'
    affinity: '[6]'
    alias: ''
    antenna_rx: '"RX2,RX2"'
    antenna_tx: '"TX/RX"'
    args: '"addr0=192.168.120.2, master_clock_rate=250e6"'
    center_freq: usrp_freq
    clock_sources: '"external"'
    comment: ''
    debug: 'False'
    gain_rx: '0'
    gain_tx: tx_gain
    len_key: '"packet_len"'
    lo_offset_rx: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    num_delay_samps: delay_samp
    samp_rate: samp_rate
    time_sources: '"external"'
    timeout_rx: '0.6'
    timeout_tx: '0.6'
    update_period: '0.04'
    wait_rx: '0.01'
    wait_tx: '0.01'
    wire_rx: '""'
    wire_tx: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [864, 844.0]
    rotation: 0
    state: disabled
- name: mimo_ofdm_jrc_zero_pad_0
  id: mimo_ofdm_jrc_zero_pad
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    debug: 'True'
    maxoutbuf: '0'
    minoutbuf: 300*(fft_len+cp_len)
    pad_front: '5'
    pad_tail: (fft_len+cp_len)*3
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [656, 724.0]
    rotation: 0
    state: enabled
- name: ofdm_config_siso
  id: epy_module
  parameters:
    alias: ''
    comment: ''
    source_code: "# %% this module will be imported in the into your flowgraph\nimport\
      \ numpy as np\n# import matplotlib.pyplot as plt\n\nN_tx = 1\nN_ltf = N_tx\n\
      N_sc = 64\n\ndata_subcarriers = list(range(-26, -21)) + list(range(-20, -7))\
      \ + list(range(-6, 0)) + list(range(1, 7)) + list(range(8, 21)) +list( range(22,\
      \ 27))\npilot_subcarriers = [-21, -7, 7, 21]\npilot_symbols = ((1, 1, 1, -1),\
      \ (1, 1, 1, -1), (1, 1, 1, -1), (1, 1, 1, -1), (-1, -1, -1, 1), (-1, -1, -1,\
      \ 1), (-1, -1, -1, 1), (1, 1, 1, -1), (-1, -1, -1, 1), (-1, -1, -1, 1), (-1,\
      \ -1, -1, 1), (-1, -1, -1, 1), (1, 1, 1, -1), (1, 1, 1, -1), (-1, -1, -1, 1),\
      \ (1, 1, 1, -1), (-1, -1, -1, 1), (-1, -1, -1, 1), (1, 1, 1, -1), (1, 1, 1,\
      \ -1), (-1, -1, -1, 1), (1, 1, 1, -1), (1, 1, 1, -1), (-1, -1, -1, 1), (1, 1,\
      \ 1, -1), (1, 1, 1, -1), (1, 1, 1, -1), (1, 1, 1, -1), (1, 1, 1, -1), (1, 1,\
      \ 1, -1), (-1, -1, -1, 1), (1, 1, 1, -1), (1, 1, 1, -1), (1, 1, 1, -1), (-1,\
      \ -1, -1, 1), (1, 1, 1, -1), (1, 1, 1, -1), (-1, -1, -1, 1), (-1, -1, -1, 1),\
      \ (1, 1, 1, -1), (1, 1, 1, -1), (1, 1, 1, -1), (-1, -1, -1, 1), (1, 1, 1, -1),\
      \ (-1, -1, -1, 1), (-1, -1, -1, 1), (-1, -1, -1, 1), (1, 1, 1, -1), (-1, -1,\
      \ -1, 1), (1, 1, 1, -1), (-1, -1, -1, 1), (-1, -1, -1, 1), (1, 1, 1, -1), (-1,\
      \ -1, -1, 1), (-1, -1, -1, 1), (1, 1, 1, -1), (1, 1, 1, -1), (1, 1, 1, -1),\
      \ (1, 1, 1, -1), (1, 1, 1, -1), (-1, -1, -1, 1), (-1, -1, -1, 1), (1, 1, 1,\
      \ -1), (1, 1, 1, -1), (-1, -1, -1, 1), (-1, -1, -1, 1), (1, 1, 1, -1), (-1,\
      \ -1, -1, 1), (1, 1, 1, -1), (-1, -1, -1, 1), (1, 1, 1, -1), (1, 1, 1, -1),\
      \ (-1, -1, -1, 1), (-1, -1, -1, 1), (-1, -1, -1, 1), (1, 1, 1, -1), (1, 1, 1,\
      \ -1), (-1, -1, -1, 1), (-1, -1, -1, 1), (-1, -1, -1, 1), (-1, -1, -1, 1), (1,\
      \ 1, 1, -1), (-1, -1, -1, 1), (-1, -1, -1, 1), (1, 1, 1, -1), (-1, -1, -1, 1),\
      \ (1, 1, 1, -1), (1, 1, 1, -1), (1, 1, 1, -1), (1, 1, 1, -1), (-1, -1, -1, 1),\
      \ (1, 1, 1, -1), (-1, -1, -1, 1), (1, 1, 1, -1), (-1, -1, -1, 1), (1, 1, 1,\
      \ -1), (-1, -1, -1, 1), (-1, -1, -1, 1), (-1, -1, -1, 1), (-1, -1, -1, 1), (-1,\
      \ -1, -1, 1), (1, 1, 1, -1), (-1, -1, -1, 1), (1, 1, 1, -1), (1, 1, 1, -1),\
      \ (-1, -1, -1, 1), (1, 1, 1, -1), (-1, -1, -1, 1), (1, 1, 1, -1), (1, 1, 1,\
      \ -1), (1, 1, 1, -1), (-1, -1, -1, 1), (-1, -1, -1, 1), (1, 1, 1, -1), (-1,\
      \ -1, -1, 1), (-1, -1, -1, 1), (-1, -1, -1, 1), (1, 1, 1, -1), (1, 1, 1, -1),\
      \ (1, 1, 1, -1), (-1, -1, -1, 1), (-1, -1, -1, 1), (-1, -1, -1, 1), (-1, -1,\
      \ -1, 1), (-1, -1, -1, 1), (-1, -1, -1, 1), (-1, -1, -1, 1))\n\nN_data = len(data_subcarriers)\n\
      N_pilot = len(pilot_subcarriers)\n\n\nl_stf_64_def = np.array([0.0, 0.0, 0.0,\
      \ 0.0, 0.0, 0.0, 0.0, 0.0, (1.4719601443879746+1.4719601443879746j), 0.0, 0.0,\
      \ 0.0, (-1.4719601443879746-1.4719601443879746j), 0.0, 0.0, 0.0, (1.4719601443879746+1.4719601443879746j),\
      \ 0.0, 0.0, 0.0, (-1.4719601443879746-1.4719601443879746j), 0.0, 0.0, 0.0, (-1.4719601443879746-1.4719601443879746j),\
      \ 0.0, 0.0, 0.0, (1.4719601443879746+1.4719601443879746j), 0.0, 0.0, 0.0, 0.0,\
      \ 0.0, 0.0, 0.0, (-1.4719601443879746-1.4719601443879746j), 0.0, 0.0, 0.0, (-1.4719601443879746-1.4719601443879746j),\
      \ 0.0, 0.0, 0.0, (1.4719601443879746+1.4719601443879746j), 0.0, 0.0, 0.0, (1.4719601443879746+1.4719601443879746j),\
      \ 0.0, 0.0, 0.0, (1.4719601443879746+1.4719601443879746j), 0.0, 0.0, 0.0, (1.4719601443879746+1.4719601443879746j),\
      \ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])\nl_ltf_64_def = np.array([0, 0, 0, 0,\
      \ 0, 0, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1,\
      \ -1, 1, 1, 1, 1, 0, 1, -1, -1, 1, 1, -1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 1,\
      \ -1, -1, 1, -1, 1, -1, 1, 1, 1, 1, 0, 0, 0, 0, 0])\n\n\nl_ltf_64_custom = np.array([0,\
      \ 0, 0, 0, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 1, 1, -1, -1, 1,\
      \ 1, -1, 1, -1, 1, 1, 1, 1, 0, 1, -1, -1, 1, 1, -1, 1, -1, 1, -1, -1, -1, -1,\
      \ -1, 1, 1, -1, -1, 1, -1, 1, -1, 1, 1, 1, 1, -1, -1, 0, 0, 0])\n\nassert(len(l_stf_64_def)\
      \ == N_sc)\nassert(len(l_ltf_64_def) == N_sc)\nassert(len(l_ltf_64_custom) ==\
      \ N_sc)\n\n\nsymbol_rotation = np.array([1, -1j, -1, 1j] * 16)\nl_ltf_64_rot\
      \ = symbol_rotation*l_ltf_64_custom\nl_stf_ltf_64 = np.vstack((l_stf_64_def,\
      \ l_stf_64_def, l_ltf_64_rot, l_ltf_64_custom))\n\n# MATLAB\n# [ltfLeft, ltfRight]\
      \ = wlan.internal.lltfSequence()\n# [zeros(4,1); 1; 1; ltfLeft; 0; ltfRight;-1;-1;\
      \ zeros(3,1)];\nltf_64 = np.array([0, 0, 0, 0, 1, 1, 1, 1, -1, -1, 1, 1, -1,\
      \ 1, -1, 1, 1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 0, 1, -1, -1,\
      \ 1, 1, -1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1, -1, 1, -1, 1, -1, 1, 1,\
      \ 1, 1, -1, -1, 0, 0, 0], dtype=np.complex64)\nP_ltf = np.array([[1, -1, 1,\
      \ 1], [1, 1, -1, 1], [1, 1, 1, -1], [-1, 1, 1, 1]], dtype=np.complex64)\n\n\n\
      ltf_tx = []\nfor i_tx in range(N_tx):\n    ltf_tx.append(tuple(map(tuple, np.outer(P_ltf[i_tx,:N_ltf],ltf_64))))\n\
      \n\nltf_mapped_64 = []\nfor i_tx in range(N_tx):\n    ltf_expand_time = np.outer(P_ltf[i_tx,:N_ltf],\
      \ ltf_64)\n    ltf_mapped_64.append(ltf_expand_time.flatten().tolist())\n\n\
      ltf_mapped_64 = np.array(ltf_mapped_64)\n\n\n# Nsc X (Ntx.Nltf) [ second dimension\
      \ is row-major of (Ntx X Nltf) ]\nltf_mapped_sc__ss_sym = []\nfor i_sc in range(N_sc):\n\
      \    ltf_ss_sym = P_ltf[:N_tx,:N_ltf]*ltf_64[i_sc]\n    ltf_mapped_sc__ss_sym.append(ltf_ss_sym.flatten().tolist())\
      \ # --> flatten() follows row-major order\n\nltf_mapped_sc__ss_sym = np.array(ltf_mapped_sc__ss_sym)\n\
      \n# %%\nl_ltf = l_stf_ltf_64[3]\nl_ltf_time = N_sc*np.fft.ifft(np.fft.fftshift(l_ltf))\
      \ / np.sqrt(np.count_nonzero(l_ltf))\nl_ltf_fir = np.conj(l_ltf_time)\nl_ltf_fir\
      \ = l_ltf_fir[::-1]\n\n# plt.figure()\n# plt.plot(np.abs(l_ltf_time))\n\n# plt.figure()\n\
      # plt.plot(np.abs(np.convolve(l_ltf_fir,l_ltf_time,'full')))\n\n# %%\n"
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [944, 104.0]
    rotation: 0
    state: true
- name: ofdm_config_siso_16sub
  id: epy_module
  parameters:
    alias: ''
    comment: ''
    source_code: "import numpy as np\n#import matplotlib.pyplot as plt\n\nN_tx = 1\n\
      N_ltf = N_tx\nN_sc = 16  # number of subcarriers\n\n#data and pilot index\n\
      data_subcarriers = list(range(-7, -4)) + list(range(-3, 0)) + list(range(1,\
      \ 4)) + list(range(5, 8))\npilot_subcarriers = [-4, 0, 4]\n\nN_data = len(data_subcarriers)\n\
      N_pilot = len(pilot_subcarriers)\n\npilot_symbols = [(1, 1, 1), (1, 1, 1), (1,\
      \ 1, 1), (1, 1, 1), \n                 (-1, -1, -1), (-1, -1, -1), (-1, -1,\
      \ -1), (-1, -1, -1), \n                 (1, 1, 1), (1, 1, 1), (1, 1, 1), (1,\
      \ 1, 1), \n                 (-1, -1, -1), (-1, -1, -1), (-1, -1, -1), (-1, -1,\
      \ -1)]\n\n\nl_stf_16_def = np.array([0.0, 0.0, (1.4719601443879746+1.4719601443879746j),\
      \ 0.0, 0.0, (-1.4719601443879746-1.4719601443879746j), 0.0, (1.4719601443879746+1.4719601443879746j),\
      \ 0.0, (-1.4719601443879746-1.4719601443879746j), 0.0, (1.4719601443879746+1.4719601443879746j),\
      \ 0.0, (-1.4719601443879746-1.4719601443879746j), 0.0, (1.4719601443879746+1.4719601443879746j)])\n\
      l_ltf_16_def = np.array([0, 0, 1, 1, -1, 1, 1, 1, -1, 1, -1, 1, 1, -1, -1, 0])\n\
      \nl_ltf_16_custom = np.array([0, 1, 1, -1, 1, 1, -1, 1, -1, 1, 1, -1, -1, 1,\
      \ 1, 0])\n\nassert(len(l_stf_16_def) == N_sc)\nassert(len(l_ltf_16_def) == N_sc)\n\
      assert(len(l_ltf_16_custom) == N_sc)\n\nsymbol_rotation = np.array([1, -1j,\
      \ -1, 1j] * 4)\nl_ltf_16_rot = symbol_rotation*l_ltf_16_custom\nl_stf_ltf_16\
      \ = np.vstack((l_stf_16_def, l_stf_16_def, l_ltf_16_rot, l_ltf_16_custom))\n\
      \nltf_16 = np.array([0, 1, 1, -1, 1, 1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 0], dtype=np.complex64)\n\
      P_ltf = np.array([[1, -1, 1, 1], [1, 1, -1, 1], [1, 1, 1, -1], [-1, 1, 1, 1]],\
      \ dtype=np.complex64)\n\nltf_tx = []\nfor i_tx in range(N_tx):\n    ltf_tx.append(tuple(map(tuple,\
      \ np.outer(P_ltf[i_tx, :N_ltf], ltf_16))))\n\nltf_mapped_16 = []\nfor i_tx in\
      \ range(N_tx):\n    ltf_expand_time = np.outer(P_ltf[i_tx, :N_ltf], ltf_16)\n\
      \    ltf_mapped_16.append(ltf_expand_time.flatten().tolist())\n\nltf_mapped_16\
      \ = np.array(ltf_mapped_16)\n\nltf_mapped_sc__ss_sym = []\nfor i_sc in range(N_sc):\n\
      \    ltf_ss_sym = P_ltf[:N_tx, :N_ltf]*ltf_16[i_sc]\n    ltf_mapped_sc__ss_sym.append(ltf_ss_sym.flatten().tolist())\n\
      \nltf_mapped_sc__ss_sym = np.array(ltf_mapped_sc__ss_sym)\n\n# %%\nl_ltf = l_stf_ltf_16[3]\n\
      l_ltf_time = N_sc*np.fft.ifft(np.fft.fftshift(l_ltf)) / np.sqrt(np.count_nonzero(l_ltf))\n\
      l_ltf_fir = np.conj(l_ltf_time)\nl_ltf_fir = l_ltf_fir[::-1]\n\n#plt.figure()\n\
      #plt.plot(np.abs(l_ltf_time))\n\n#plt.figure()\n#plt.plot(np.abs(np.convolve(l_ltf_fir,\
      \ l_ltf_time, 'full')))\n\n"
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [936, 176.0]
    rotation: 0
    state: true
- name: qtgui_time_sink_x_0_0_1_1
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'True'
    gui_hint: ''
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: Signal TX
    nconnections: '1'
    size: (fft_len+cp_len)*15
    srate: '1'
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '100'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_AUTO
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '"packet_len"'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [632, 844.0]
    rotation: 180
    state: disabled
- name: uhd_usrp_sink_1
  id: uhd_usrp_sink
  parameters:
    affinity: ''
    alias: ''
    ant0: '"TX/RX"'
    ant1: '"TX/RX"'
    ant10: '"TX/RX"'
    ant11: '"TX/RX"'
    ant12: '"TX/RX"'
    ant13: '"TX/RX"'
    ant14: '"TX/RX"'
    ant15: '"TX/RX"'
    ant16: '"TX/RX"'
    ant17: '"TX/RX"'
    ant18: '"TX/RX"'
    ant19: '"TX/RX"'
    ant2: '"TX/RX"'
    ant20: '"TX/RX"'
    ant21: '"TX/RX"'
    ant22: '"TX/RX"'
    ant23: '"TX/RX"'
    ant24: '"TX/RX"'
    ant25: '"TX/RX"'
    ant26: '"TX/RX"'
    ant27: '"TX/RX"'
    ant28: '"TX/RX"'
    ant29: '"TX/RX"'
    ant3: '"TX/RX"'
    ant30: '"TX/RX"'
    ant31: '"TX/RX"'
    ant4: '"TX/RX"'
    ant5: '"TX/RX"'
    ant6: '"TX/RX"'
    ant7: '"TX/RX"'
    ant8: '"TX/RX"'
    ant9: '"TX/RX"'
    bw0: samp_rate
    bw1: '0'
    bw10: '0'
    bw11: '0'
    bw12: '0'
    bw13: '0'
    bw14: '0'
    bw15: '0'
    bw16: '0'
    bw17: '0'
    bw18: '0'
    bw19: '0'
    bw2: '0'
    bw20: '0'
    bw21: '0'
    bw22: '0'
    bw23: '0'
    bw24: '0'
    bw25: '0'
    bw26: '0'
    bw27: '0'
    bw28: '0'
    bw29: '0'
    bw3: '0'
    bw30: '0'
    bw31: '0'
    bw4: '0'
    bw5: '0'
    bw6: '0'
    bw7: '0'
    bw8: '0'
    bw9: '0'
    center_freq0: usrp_freq
    center_freq1: '0'
    center_freq10: '0'
    center_freq11: '0'
    center_freq12: '0'
    center_freq13: '0'
    center_freq14: '0'
    center_freq15: '0'
    center_freq16: '0'
    center_freq17: '0'
    center_freq18: '0'
    center_freq19: '0'
    center_freq2: '0'
    center_freq20: '0'
    center_freq21: '0'
    center_freq22: '0'
    center_freq23: '0'
    center_freq24: '0'
    center_freq25: '0'
    center_freq26: '0'
    center_freq27: '0'
    center_freq28: '0'
    center_freq29: '0'
    center_freq3: '0'
    center_freq30: '0'
    center_freq31: '0'
    center_freq4: '0'
    center_freq5: '0'
    center_freq6: '0'
    center_freq7: '0'
    center_freq8: '0'
    center_freq9: '0'
    clock_rate: 0e0
    clock_source0: ''
    clock_source1: ''
    clock_source2: ''
    clock_source3: ''
    clock_source4: ''
    clock_source5: ''
    clock_source6: ''
    clock_source7: ''
    comment: ''
    dev_addr: '"serial=32A036E"'
    dev_args: ''
    gain0: tx_gain
    gain1: '0'
    gain10: '0'
    gain11: '0'
    gain12: '0'
    gain13: '0'
    gain14: '0'
    gain15: '0'
    gain16: '0'
    gain17: '0'
    gain18: '0'
    gain19: '0'
    gain2: '0'
    gain20: '0'
    gain21: '0'
    gain22: '0'
    gain23: '0'
    gain24: '0'
    gain25: '0'
    gain26: '0'
    gain27: '0'
    gain28: '0'
    gain29: '0'
    gain3: '0'
    gain30: '0'
    gain31: '0'
    gain4: '0'
    gain5: '0'
    gain6: '0'
    gain7: '0'
    gain8: '0'
    gain9: '0'
    len_tag_name: '""'
    lo_export0: 'False'
    lo_export1: 'False'
    lo_export10: 'False'
    lo_export11: 'False'
    lo_export12: 'False'
    lo_export13: 'False'
    lo_export14: 'False'
    lo_export15: 'False'
    lo_export16: 'False'
    lo_export17: 'False'
    lo_export18: 'False'
    lo_export19: 'False'
    lo_export2: 'False'
    lo_export20: 'False'
    lo_export21: 'False'
    lo_export22: 'False'
    lo_export23: 'False'
    lo_export24: 'False'
    lo_export25: 'False'
    lo_export26: 'False'
    lo_export27: 'False'
    lo_export28: 'False'
    lo_export29: 'False'
    lo_export3: 'False'
    lo_export30: 'False'
    lo_export31: 'False'
    lo_export4: 'False'
    lo_export5: 'False'
    lo_export6: 'False'
    lo_export7: 'False'
    lo_export8: 'False'
    lo_export9: 'False'
    lo_source0: internal
    lo_source1: internal
    lo_source10: internal
    lo_source11: internal
    lo_source12: internal
    lo_source13: internal
    lo_source14: internal
    lo_source15: internal
    lo_source16: internal
    lo_source17: internal
    lo_source18: internal
    lo_source19: internal
    lo_source2: internal
    lo_source20: internal
    lo_source21: internal
    lo_source22: internal
    lo_source23: internal
    lo_source24: internal
    lo_source25: internal
    lo_source26: internal
    lo_source27: internal
    lo_source28: internal
    lo_source29: internal
    lo_source3: internal
    lo_source30: internal
    lo_source31: internal
    lo_source4: internal
    lo_source5: internal
    lo_source6: internal
    lo_source7: internal
    lo_source8: internal
    lo_source9: internal
    maxoutbuf: '10000'
    minoutbuf: '0'
    nchan: '1'
    norm_gain0: 'False'
    norm_gain1: 'False'
    norm_gain10: 'False'
    norm_gain11: 'False'
    norm_gain12: 'False'
    norm_gain13: 'False'
    norm_gain14: 'False'
    norm_gain15: 'False'
    norm_gain16: 'False'
    norm_gain17: 'False'
    norm_gain18: 'False'
    norm_gain19: 'False'
    norm_gain2: 'False'
    norm_gain20: 'False'
    norm_gain21: 'False'
    norm_gain22: 'False'
    norm_gain23: 'False'
    norm_gain24: 'False'
    norm_gain25: 'False'
    norm_gain26: 'False'
    norm_gain27: 'False'
    norm_gain28: 'False'
    norm_gain29: 'False'
    norm_gain3: 'False'
    norm_gain30: 'False'
    norm_gain31: 'False'
    norm_gain4: 'False'
    norm_gain5: 'False'
    norm_gain6: 'False'
    norm_gain7: 'False'
    norm_gain8: 'False'
    norm_gain9: 'False'
    num_mboards: '1'
    otw: ''
    samp_rate: samp_rate
    sd_spec0: ''
    sd_spec1: ''
    sd_spec2: ''
    sd_spec3: ''
    sd_spec4: ''
    sd_spec5: ''
    sd_spec6: ''
    sd_spec7: ''
    show_lo_controls: 'False'
    start_time: '-1.0'
    stream_args: ''
    stream_chans: '[0]'
    sync: none
    time_source0: ''
    time_source1: ''
    time_source2: ''
    time_source3: ''
    time_source4: ''
    time_source5: ''
    time_source6: ''
    time_source7: ''
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1152, 652.0]
    rotation: 0
    state: enabled
- name: uhd_usrp_sink_1_0
  id: uhd_usrp_sink
  parameters:
    affinity: ''
    alias: ''
    ant0: '"TX/RX"'
    ant1: '"TX/RX"'
    ant10: '"TX/RX"'
    ant11: '"TX/RX"'
    ant12: '"TX/RX"'
    ant13: '"TX/RX"'
    ant14: '"TX/RX"'
    ant15: '"TX/RX"'
    ant16: '"TX/RX"'
    ant17: '"TX/RX"'
    ant18: '"TX/RX"'
    ant19: '"TX/RX"'
    ant2: '"TX/RX"'
    ant20: '"TX/RX"'
    ant21: '"TX/RX"'
    ant22: '"TX/RX"'
    ant23: '"TX/RX"'
    ant24: '"TX/RX"'
    ant25: '"TX/RX"'
    ant26: '"TX/RX"'
    ant27: '"TX/RX"'
    ant28: '"TX/RX"'
    ant29: '"TX/RX"'
    ant3: '"TX/RX"'
    ant30: '"TX/RX"'
    ant31: '"TX/RX"'
    ant4: '"TX/RX"'
    ant5: '"TX/RX"'
    ant6: '"TX/RX"'
    ant7: '"TX/RX"'
    ant8: '"TX/RX"'
    ant9: '"TX/RX"'
    bw0: 5e6
    bw1: '0'
    bw10: '0'
    bw11: '0'
    bw12: '0'
    bw13: '0'
    bw14: '0'
    bw15: '0'
    bw16: '0'
    bw17: '0'
    bw18: '0'
    bw19: '0'
    bw2: '0'
    bw20: '0'
    bw21: '0'
    bw22: '0'
    bw23: '0'
    bw24: '0'
    bw25: '0'
    bw26: '0'
    bw27: '0'
    bw28: '0'
    bw29: '0'
    bw3: '0'
    bw30: '0'
    bw31: '0'
    bw4: '0'
    bw5: '0'
    bw6: '0'
    bw7: '0'
    bw8: '0'
    bw9: '0'
    center_freq0: 480e6
    center_freq1: '0'
    center_freq10: '0'
    center_freq11: '0'
    center_freq12: '0'
    center_freq13: '0'
    center_freq14: '0'
    center_freq15: '0'
    center_freq16: '0'
    center_freq17: '0'
    center_freq18: '0'
    center_freq19: '0'
    center_freq2: '0'
    center_freq20: '0'
    center_freq21: '0'
    center_freq22: '0'
    center_freq23: '0'
    center_freq24: '0'
    center_freq25: '0'
    center_freq26: '0'
    center_freq27: '0'
    center_freq28: '0'
    center_freq29: '0'
    center_freq3: '0'
    center_freq30: '0'
    center_freq31: '0'
    center_freq4: '0'
    center_freq5: '0'
    center_freq6: '0'
    center_freq7: '0'
    center_freq8: '0'
    center_freq9: '0'
    clock_rate: 0e0
    clock_source0: internal
    clock_source1: ''
    clock_source2: ''
    clock_source3: ''
    clock_source4: ''
    clock_source5: ''
    clock_source6: ''
    clock_source7: ''
    comment: ''
    dev_addr: '"serial=32A036E"'
    dev_args: ''
    gain0: '90'
    gain1: '0'
    gain10: '0'
    gain11: '0'
    gain12: '0'
    gain13: '0'
    gain14: '0'
    gain15: '0'
    gain16: '0'
    gain17: '0'
    gain18: '0'
    gain19: '0'
    gain2: '0'
    gain20: '0'
    gain21: '0'
    gain22: '0'
    gain23: '0'
    gain24: '0'
    gain25: '0'
    gain26: '0'
    gain27: '0'
    gain28: '0'
    gain29: '0'
    gain3: '0'
    gain30: '0'
    gain31: '0'
    gain4: '0'
    gain5: '0'
    gain6: '0'
    gain7: '0'
    gain8: '0'
    gain9: '0'
    len_tag_name: '""'
    lo_export0: 'False'
    lo_export1: 'False'
    lo_export10: 'False'
    lo_export11: 'False'
    lo_export12: 'False'
    lo_export13: 'False'
    lo_export14: 'False'
    lo_export15: 'False'
    lo_export16: 'False'
    lo_export17: 'False'
    lo_export18: 'False'
    lo_export19: 'False'
    lo_export2: 'False'
    lo_export20: 'False'
    lo_export21: 'False'
    lo_export22: 'False'
    lo_export23: 'False'
    lo_export24: 'False'
    lo_export25: 'False'
    lo_export26: 'False'
    lo_export27: 'False'
    lo_export28: 'False'
    lo_export29: 'False'
    lo_export3: 'False'
    lo_export30: 'False'
    lo_export31: 'False'
    lo_export4: 'False'
    lo_export5: 'False'
    lo_export6: 'False'
    lo_export7: 'False'
    lo_export8: 'False'
    lo_export9: 'False'
    lo_source0: internal
    lo_source1: internal
    lo_source10: internal
    lo_source11: internal
    lo_source12: internal
    lo_source13: internal
    lo_source14: internal
    lo_source15: internal
    lo_source16: internal
    lo_source17: internal
    lo_source18: internal
    lo_source19: internal
    lo_source2: internal
    lo_source20: internal
    lo_source21: internal
    lo_source22: internal
    lo_source23: internal
    lo_source24: internal
    lo_source25: internal
    lo_source26: internal
    lo_source27: internal
    lo_source28: internal
    lo_source29: internal
    lo_source3: internal
    lo_source30: internal
    lo_source31: internal
    lo_source4: internal
    lo_source5: internal
    lo_source6: internal
    lo_source7: internal
    lo_source8: internal
    lo_source9: internal
    maxoutbuf: '10000'
    minoutbuf: '0'
    nchan: '1'
    norm_gain0: 'False'
    norm_gain1: 'False'
    norm_gain10: 'False'
    norm_gain11: 'False'
    norm_gain12: 'False'
    norm_gain13: 'False'
    norm_gain14: 'False'
    norm_gain15: 'False'
    norm_gain16: 'False'
    norm_gain17: 'False'
    norm_gain18: 'False'
    norm_gain19: 'False'
    norm_gain2: 'False'
    norm_gain20: 'False'
    norm_gain21: 'False'
    norm_gain22: 'False'
    norm_gain23: 'False'
    norm_gain24: 'False'
    norm_gain25: 'False'
    norm_gain26: 'False'
    norm_gain27: 'False'
    norm_gain28: 'False'
    norm_gain29: 'False'
    norm_gain3: 'False'
    norm_gain30: 'False'
    norm_gain31: 'False'
    norm_gain4: 'False'
    norm_gain5: 'False'
    norm_gain6: 'False'
    norm_gain7: 'False'
    norm_gain8: 'False'
    norm_gain9: 'False'
    num_mboards: '1'
    otw: ''
    samp_rate: samp_rate
    sd_spec0: ''
    sd_spec1: ''
    sd_spec2: ''
    sd_spec3: ''
    sd_spec4: ''
    sd_spec5: ''
    sd_spec6: ''
    sd_spec7: ''
    show_lo_controls: 'False'
    start_time: '-1.0'
    stream_args: ''
    stream_chans: '[0]'
    sync: pc_clock
    time_source0: ''
    time_source1: ''
    time_source2: ''
    time_source3: ''
    time_source4: ''
    time_source5: ''
    time_source6: ''
    time_source7: ''
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1152, 864.0]
    rotation: 0
    state: disabled
- name: virtual_sink_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: TX1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1520, 548.0]
    rotation: 0
    state: enabled
- name: virtual_source_0_1_0_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: TX1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [96, 740.0]
    rotation: 0
    state: enabled

connections:
- [blocks_multiply_const_vxx_0, '0', mimo_ofdm_jrc_zero_pad_0, '0']
- [blocks_socket_pdu_0, pdus, mimo_ofdm_jrc_stream_encoder_0, pdu_in]
- [digital_ofdm_cyclic_prefixer_0, '0', virtual_sink_0, '0']
- [fft_vxx_0, '0', digital_ofdm_cyclic_prefixer_0, '0']
- [mimo_ofdm_jrc_mimo_precoder_0, '0', fft_vxx_0, '0']
- [mimo_ofdm_jrc_ndp_generator_0, out, mimo_ofdm_jrc_stream_encoder_0, pdu_in]
- [mimo_ofdm_jrc_packet_switch_0, strobe, mimo_ofdm_jrc_ndp_generator_0, enable]
- [mimo_ofdm_jrc_packet_switch_0, strobe, mimo_ofdm_jrc_socket_pdu_jrc_0, enable]
- [mimo_ofdm_jrc_socket_pdu_jrc_0, pdus, mimo_ofdm_jrc_stream_encoder_0, pdu_in]
- [mimo_ofdm_jrc_stream_encoder_0, '0', mimo_ofdm_jrc_mimo_precoder_0, '0']
- [mimo_ofdm_jrc_usrp_mimo_trx_0, '0', blocks_null_sink_0, '0']
- [mimo_ofdm_jrc_zero_pad_0, '0', mimo_ofdm_jrc_usrp_mimo_trx_0, '0']
- [mimo_ofdm_jrc_zero_pad_0, '0', qtgui_time_sink_x_0_0_1_1, '0']
- [mimo_ofdm_jrc_zero_pad_0, '0', uhd_usrp_sink_1, '0']
- [mimo_ofdm_jrc_zero_pad_0, '0', uhd_usrp_sink_1_0, '0']
- [virtual_source_0_1_0_0, '0', blocks_multiply_const_vxx_0, '0']

metadata:
  file_format: 1
